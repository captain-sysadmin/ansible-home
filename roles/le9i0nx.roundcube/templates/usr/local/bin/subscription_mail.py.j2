#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import mysql.connector
#import subprocess
import ldap3
# pip3 install python3-ldap
import sys
import re

# Создаём текст подписи
def subscription_mail(emailR,html):
    c.search('dc=rugion,dc=ru','(&(mail={e})(objectClass=sambaSamAccount)(!(sambaAcctFlags=[DU ])))'.format(e=emailR), ldap3.SEARCH_SCOPE_WHOLE_SUBTREE, attributes = ['sn','givenName','displayName','mail','roomNumber','mobile','o','telephoneNumber','pager','title','cn','mail'])
    sn = givenName = signature = ""
    for raw_ldap in c.response:
        telephone = m_telephone = sip = mobile = company = job_title = icq = address = telephone_company = mail_to = html_begin = html_img = html_br = html_end = ""
        sn = raw_ldap['attributes'].get('sn',[''])[0]
        givenName = raw_ldap['attributes'].get('givenName',[''])[0]
        if len(sn) < 1 or len(givenName) < 1 :
            continue
        title = raw_ldap['attributes'].get('title',[''])[0]
        o = raw_ldap['attributes'].get('o',[''])[0]
        telephoneNumber = raw_ldap['attributes'].get('telephoneNumber',[''])[0]
        mobile = raw_ldap['attributes'].get('mobile',[''])[0]
        pager = raw_ldap['attributes'].get('pager',[''])[0]
        roomNumber = raw_ldap['attributes'].get('roomNumber',['0'])[0]
        cn = raw_ldap['attributes'].get('cn',[''])[0]
        email = re.sub("^\s+|\n|\r|\s+$", '', raw_ldap['attributes'].get('mail',[''])[0] )
        domain =re.findall(r'([a-z0-9_\.-]+)@([a-z0-9_\.-]+)', email)[0][1]

        if html == 1:
            html_begin = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <pre class=\"moz-signature\" cols=\"72\">\n"
            html_br  = ""
            #html_end = "  </pre>\n</html>"
            html_end = """  </pre>\n  <img alt="HRN_Color_RGB.png" src="data:image/png;base64,
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
whbtCKO9AAAAAElFTkSuQmCC
"/>\n</html>"""
            mail_to = "{1}<a href=\"mailto:{0}\">{0}</a>\n".format(email,html_br)
        else:
            mail_to = "mailto:{0}\n".format(email)
        if len(title) > 1:
            job_title = "{1}{0}\n".format(title,html_br)
        if len(o) > 1:
            company = "{1}{0}\n".format(o,html_br)
        if len(telephoneNumber) > 1:
            telephone = ", доб. {0}".format(telephoneNumber)
        if len(mobile) > 1:
            m_telephone = "{1}моб. {0}\n".format(mobile,html_br)
        if len(pager) > 1:
            icq = "{1}icq: {0}\n".format(pager,html_br)
        if domain == "info74.ru":
            if len(o) < 1:
                company = "{0}74.RU\n".format(html_br)
            telephone_company = "{1}тел.: 8 (351) 729-94-90{0}\n".format(telephone,html_br)
            rom = int(roomNumber)
            if 100 <= rom <= 299: address = "{1}г. Челябинск, ул. Мелькомбинат 2 1-й участок, 18, офис {0}\n{1}за ТРК `Родник`\n".format(rom,html_br)
            elif 300 <= rom <= 499:
                address = "{1}г. Челябинск, ул. Лесопарковая, 6, офис {0}\n{1}Бизнес-центр `Park City`\n".format(rom,html_br)
                list_mail = ["np@info74.ru","belyakova@info74.ru","sharlova@info74.ru"]
                for x in list_mail:
                    if email in x:
                        address = "{1}454080, г. Челябинск, ул. Лесопарковая, 6, офис {0}\n{1}Бизнес-центр `Park City`\n".format(rom,html_br)
            else: address = "{0}г. Челябинск, ул. Лесопарковая, 6\n{0}Бизнес-центр `Park City`\n".format(html_br)
        elif domain == "info63.ru":
            if len(o) < 1:
                company = "{0}63.RU\n".format(html_br)
            telephone_company = "{1}тел./факс: 8 (846) 233-43-63{0}\n".format(telephone,html_br)
            address = "{0}г. Самара, Мичурина, 52, офис 421".format(html_br)
        elif domain == "corp.ufa1.ru":
            if len(o) < 1:
                company = "{0}UFA1.RU\n".format(html_br)
            html_begin = html_begin + "Ufa1.ru – городской сайт, занимающий топовые позиции в рейтингах региона\n   <a href=\"http://f.i.sdska.ru/_f/group_price/2014/prezentatsia_ufa1.pdf\">http://f.i.sdska.ru/_f/group_price/2014/prezentatsia_ufa1.pdf</a>\n<br/>"
            telephone_company = "{1}тел.: 8 (347) 229-45-95{0}\n".format(telephone,html_br)
            address = "{0}г. Уфа, Цюрупы 42, 5 этаж".format(html_br)
        elif domain == "corp.29.ru":
            if len(o) < 1:
                company = "{0}29.RU\n".format(html_br)
            telephone_company = "{1}тел.: 8 (8182) 494029{0}\n".format(telephone,html_br)
            address = "{0}г. Архангельск, пр. Ломоносова, д. 81, оф. 311".format(html_br)
        elif domain == "corp.v1.ru":
            if len(o) < 1:
                company = "{0}V1.RU\n".format(html_br)
            telephone_company = "{1}тел.: 8 (8442) 59-59-16, 26-78-47, 26-63-92{0}\n".format(telephone,html_br)
            address = "{0}г. Волгоград , ул. 7-я Гвардейская 2, офис 102".format(html_br)
        elif domain == "corp.161.ru":
            if len(o) < 1:
                company = "{0}161.RU\n".format(html_br)
            telephone_company = "{1}тел. 8 (863) 261-8-161 {0}\n{1}факс  8 (863) 219-47-01\n".format(telephone,html_br)
            address = "{0}г. Ростов-на-Дону, ул. М. Горького, 130, 8 этаж".format(html_br)
        elif domain == "ig72.ru":
            if len(o) < 1:
                company = "{0}72.RU\n".format(html_br)
            telephone_company = "{1}тел.: 8 (3452) 56-72-72{0}\n".format(telephone,html_br)
            address = "{0}г. Тюмень, ул. Герцена, 55 ( через главный вход с колоннами), офис 307-316".format(html_br)
        elif domain == "corp.76.ru":
            if len(o) < 1:
                company = "{0}76.RU\n".format(html_br)
            telephone_company = "{1}тел.: 8 (4852) 28-00-82{0}\n".format(telephone,html_br)
            address = "{0}г. Ярославль, ул. Володарского, д.101".format(html_br)
        elif domain == "info59.ru":
            if len(o) < 1:
                company = "{0}59.RU\n".format(html_br)
            telephone_company = "{1}тел. 8 (342) 257-67-58{0}\n".format(telephone,html_br)
            address = "{0}г. Пермь, ул. Сибирская, 27Б, 3 этаж".format(html_br)


        signature = html_begin + "{2}С уважением, {0} {1}\n".format(sn,givenName,html_br) + \
                    job_title + \
                    company + \
                    telephone_company + \
                    m_telephone + \
                    mail_to + \
                    address + \
                    html_end

    return "{0} {1}".format(sn,givenName),signature.replace("'","\"")

# ldap conect
s = ldap3.Server('{{roundcube_ldap_server}}', port = 389, get_info = ldap3.GET_ALL_INFO)
c = ldap3.Connection(s, auto_bind = True, client_strategy = ldap3.STRATEGY_SYNC, authentication=ldap3.ANONYMOUS, check_names=True)

# mysql conect
conn = mysql.connector.connect (host = 'localhost', user = '{{roundcube_db_user}}', password='{{roundcube_db_pass}}', db='{{roundcube_db_name}}', charset='utf8')
#conn.autocommit(True)
cur = conn.cursor()
cur.execute("SELECT email,name,signature,html_signature FROM identities ORDER BY email;")
#cur.execute("SELECT email,name,signature,html_signature FROM identities WHERE email ='" + sys.argv[1] +"';")

# обходим mysql записи в таблице
for raw_mysql in cur.fetchall():
    name,subscription = subscription_mail(raw_mysql[0],0)
    if raw_mysql[2] != subscription:
        sql = "UPDATE identities SET name = '"+ name +"', signature = '"+ subscription + "', html_signature = 0 WHERE email = '"+ raw_mysql[0]  +"';"
        print("mail {0}".format(raw_mysql[0]))
        cur.execute(sql)
        conn.commit()

# Закрываем соединение с ldap
c.unbind()

# Закрываем соединение с mysql
cur.close()
conn.close()

