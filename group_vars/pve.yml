---

#syncthing
role_syncthing:
  inventory_hosts: '{{ groups.pve }}'
  folders:
    path: '/var/lib/vz/template/iso/'
    id: 'vz_iso'
#tinc
tinc_host_configuration:
  Address: '{{ ansible_eth0.ipv4.address }}'

tinc_connect_to: '[ {% for item in tinc_inventory_hosts %} "{{ hostvars[item].ansible_hostname }}", {% endfor %} ]'
tinc_hostname: '{{ ansible_hostname }}'
tinc_network: 'mesh0'
tinc_inventory_hosts: '{{ groups.pve }}'
tinc_interface: '{{ tinc_network }}'
tinc_connection_type: 'static'
tinc_ifupdown_interface:
  - iface: '{{ tinc_interface }}'
    type: 'interface'
    inet: '{{ tinc_connection_type }}'
    auto: '{{ tinc_interface_auto }}'
    addresses: '{{ tinc_host_addr }}'

#ssh
sshd_permit_root_login: 'yes'
sshd_password_authentication: 'yes'
tcpwrappers: False
tcpwrappers_deny_all: False
ferm_enabled: False
#hostname
hostname_hosts:
    - { regexp: "^127.0.0.1", line: "127.0.0.1\tlocalhost" }
    - { regexp: "^::1",       line: "::1\tlocalhost\tip6-localhost\tip6-loopback" }
    - { regexp: "^127.0.1.1", line: "127.0.1.1 test", state: "absent" }
hostname_hosts_static: "[{% if ansible_mesh0 is defined %}{ u'regexp': '^{{ ansible_mesh0.ipv4.address }}', u'line': '{{ ansible_mesh0.ipv4.address }}\t{{ ansible_hostname}}{% if ansible_hostname != ansible_fqdn %}\t{{ansible_fqdn}}{% endif %}' }{% endif %} ]"

hostname_hosts_pve: "[ {% for item in tinc_inventory_hosts %} { u'regexp': '^{{ hostvars[item].ansible_mesh0.ipv4.address }}', u'line': '{{ hostvars[item].ansible_mesh0.ipv4.address }}\t{{ hostvars[item].ansible_hostname }}{%if hostvars[item].ansible_hostname != hostvars[item].ansible_fqdn %}\t{{ hostvars[item].ansible_fqdn }}{% endif %}'}, {% endfor %} ]"

hostname_hosts_add: "{{ hostname_hosts_static + hostname_hosts_pve }}"

## vim: foldmethod=marker:tabstop=2:shiftwidth=2:softtabstop=2
